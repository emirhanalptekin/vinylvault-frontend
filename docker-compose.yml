services:
  postgres:
    image: postgres:14-alpine
    container_name: vinylvault-postgres
    environment:
      POSTGRES_DB: vinylvault
      POSTGRES_USER: vinylvault
      POSTGRES_PASSWORD: vinylvault
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - vinylvault-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U vinylvault"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./vinylvault
      dockerfile: Dockerfile
    container_name: vinylvault-backend
    environment:
      VINYLVAULT_DATABASE_URL: postgres://vinylvault:vinylvault@postgres:5432/vinylvault?sslmode=disable
      VINYLVAULT_PORT: 5050
    ports:
      - "5050:5050"
    depends_on:
      - db-init
    networks:
      - vinylvault-network
    restart: unless-stopped

  frontend:
    build:
      context: ./vinylvault-frontend
      dockerfile: Dockerfile
    container_name: vinylvault-frontend
    ports:
      - "8080:80"
    depends_on:
      - backend
    networks:
      - vinylvault-network

  db-init:
    image: migrate/migrate
    volumes:
      - ./vinylvault/internal/db/migrations:/migrations
    command: ["-path", "/migrations", "-database", "postgres://vinylvault:vinylvault@vinylvault-postgres:5432/vinylvault?sslmode=disable", "up"]
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - vinylvault-network
    restart: "no"

networks:
  vinylvault-network:
    driver: bridge

volumes:
  postgres_data: